{"version":3,"sources":["log/LogTypes.ts","chaos-factor/ChaosFactorNumber.tsx","chaos-factor/ChaosActions.ts","chaos-factor/ChaosTypes.ts","chaos-factor/ChaosFactor.tsx","characters/CharactersActions.ts","characters/CharactersTypes.ts","characters/AddCharacterModal.tsx","characters/CharactersListItem.tsx","characters/EditCharacterModal.tsx","characters/ViewCharacterModal.tsx","characters/CharactersList.tsx","characters/Characters.tsx","utils/fateOdds.ts","log/LogActions.ts","log/items/LogDiceResult.tsx","log/items/LogFateResult.tsx","log/items/LogMessage.tsx","log/items/LogNamedMessage.tsx","log/LogContent.tsx","log/LogFooter.tsx","log/Log.tsx","threads/ThreadsActions.ts","threads/ThreadsTypes.ts","threads/AddThreadModal.tsx","threads/EditThreadModal.tsx","threads/ThreadListItem.tsx","threads/ViewThreadModal.tsx","threads/ThreadsList.tsx","threads/Threads.tsx","toolbar/ToolbarFate.tsx","toolbar/ToolbarHeader.tsx","toolbar/ToolbarSaveLoad.tsx","toolbar/Toolbar.tsx","serviceWorker.ts","chaos-factor/chaosReducer.ts","characters/charactersReducer.ts","log/logReducer.ts","threads/threadsReducer.ts","store.ts","index.tsx","Prophet.tsx"],"names":["LogItemType","dispatchProps","setChaos","createAction","action","chaos","ChaosFactorNumberC","connect","props","elClass","concat","number","selected","react_default","a","createElement","className","onClick","ChaosFactorC","state","chaosFactorNumbers","Array","from","length","map","_","i","key","addCharacter","character","removeCharacter","id","editCharacter","data","selectCharacter","AddCharacterModalC","Modal_default","onHide","show","formik_esm","onSubmit","values","description","generateID","isNPC","name","initialValues","Header","closeButton","Title","as","Body","htmlFor","type","required","Footer","Button_default","CharactersListItem","viewCharacter","EditCharacterModalC","initialForm","backdrop","keyboard","rows","component","ViewCharacterModalC","CharactersListC","characters","selectedCharacter","_useState","useState","_useState2","Object","slicedToArray","showViewModal","setShowViewModal","_useState3","_useState4","showEditModal","setShowEditModal","setViewCharacter","c","CharactersListItem_CharactersListItem","Fragment","Characters","showAddModal","setShowAddModal","href","Odds","postLog","item","deleteLog","clearLog","setInputMode","mode","editLog","LogDiceResultC","initialFormValues","editing","setEditing","diceString","roll","objectSpread","placeholder","FateOdds","Map","set","HasToBe","UpProb","Prob","LoProb","ASureThing","NearSureThing","VeryLikely","Likely","SomewhatLikely","FiftyFifty","Unlikely","VeryUnlikely","NoWay","Impossible","LogFateResultC","exceptional","exceptionalContent","question","answer","chaosFactor","probability","odds","LogMessage","content","LogNamedMessage","react_markdown_default","source","LogContentC","items","log","listRef","useRef","useEffect","el","current","lastChild","scrollIntoView","renderedItems","Message","LogMessage_LogMessage","NamedMessage","LogNamedMessage_LogNamedMessage","FateResult","DiceResult","ref","LogFooterC","inputMode","inputRef","getInputCharacter","characterId","find","dropdownCharacters","Dropdown_default","Item","eventKey","JSON","stringify","actions","resetForm","meta","sent_at","Date","now","startsWith","onSelect","parse","focus","Toggle","size","variant","getInputModeLabel","Menu","Divider","innerRef","Log","addThread","thread","removeThread","editThread","selectThread","AddThreadModalC","EditThreadModalC","viewThread","ThreadListItem","ViewThreadModalC","ThreadsListC","selectedThread","threads","setViewThread","ThreadListItem_ThreadListItem","Threads","ToolbarFateC","valueOf","setOdds","get","ranges","setRanges","prob","onChange","e","target","Number","value","bound","chance","getFateSuccessChance","Math","floor","random","Dice","errors","total","ToolbarHeader","rel","ToolbarSaveLoadC","saveName","setSaveName","saves","setSaves","saveList","entries","localStorage","saveEntries","s","es_Dropdown","trim","saveData","setItem","onSave","sessionStorage","window","location","reload","removeItem","Toolbar","ToolbarHeader_ToolbarHeader","Boolean","hostname","match","chaosReducer","createReducer","handleAction","payload","initialState","undefined","charactersReducer","toConsumableArray","filter","assign","logReducer","threadsReducer","t","rootReducer","combineReducers","getItem","store","createStore","devToolsEnhancer","ReactDOM","render","es","Log_Log","Characters_Characters","Threads_Threads","Toolbar_Toolbar","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b3e9542.chunk.js","sourcesContent":["import { Character } from \"../characters/CharactersTypes\";\nimport { Odds, OddsProbability } from \"../utils/fateOdds\";\n\nexport interface LogState {\n    items: LogItem[];\n    inputMode: LogInputMode;\n}\n\nexport interface LogInputMode {\n    type: \"narration\" | \"character\";\n    characterId: string;\n}\n\nexport enum LogItemType {\n    Message,\n    NamedMessage,\n    FateResult,\n    DiceResult,\n    Divider,\n}\n\nexport interface LogBaseItem {\n    id: string;\n    type: LogItemType;\n    sent_at: number;\n}\n\nexport interface LogMessageItem extends LogBaseItem {\n    type: LogItemType.Message;\n    content: string;\n}\n\nexport interface LogNamedMessageItem extends LogBaseItem {\n    type: LogItemType.NamedMessage;\n    name: string;\n    content: string;\n    action: boolean;\n}\n\nexport interface LogFateResultItem extends LogBaseItem {\n    type: LogItemType.FateResult;\n    question: string;\n    answer: boolean;\n    exceptional: boolean;\n    exceptionalContent: string;\n    roll: number;\n    probability: OddsProbability;\n    odds: Odds;\n    chaosFactor: number;\n}\n\nexport interface LogDiceResultItem extends LogBaseItem {\n    type: LogItemType.DiceResult;\n    description: string;\n    diceString: string;\n    roll: number;\n}\n\nexport interface LogDividerItem extends LogBaseItem {\n    type: LogItemType.Divider;\n    title: string;\n}\n\nexport type LogItem =\n    | LogMessageItem\n    | LogNamedMessageItem\n    | LogFateResultItem\n    | LogDiceResultItem\n    | LogDividerItem;\n\nexport const POST_LOG = \"@log/POST\";\nexport const DELETE_LOG = \"@log/DELETE\";\nexport const CLEAR_LOG = \"@log/CLEAR\";\nexport const EDIT_LOG = \"@log/EDIT\";\nexport const SET_INPUT_MODE = \"@log/INPUT_MODE\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setChaos } from \"./ChaosActions\";\n\nconst dispatchProps = {\n    setChaos,\n};\n\nexport type ChaosFactorNumberProps = typeof dispatchProps & {\n    number: number;\n    selected: boolean;\n};\n\nconst ChaosFactorNumber: React.FC<ChaosFactorNumberProps> = (props) => {\n    const elClass = `list-group-item list-group-item-action flex-grow-1 text-center\n    chaos-${props.number} ${props.selected && \"list-group-item-secondary\"}`;\n\n    return (\n        <button\n            className={elClass}\n            onClick={() => props.setChaos(props.number)}>\n            {props.number}\n        </button>\n    );\n};\n\nexport const ChaosFactorNumberC = connect(\n    null,\n    dispatchProps,\n)(ChaosFactorNumber);\n","import { ActionType, createAction } from \"typesafe-actions\";\nimport { SET_CHAOS } from \"./ChaosTypes\";\n\nexport const setChaos = createAction(SET_CHAOS, (action) => {\n    return (chaos: number) => action(chaos);\n});\n\nexport type ChaosActions = ActionType<typeof setChaos>;\n","export type ChaosState = number;\n\nexport const SET_CHAOS = \"@chaos/SET\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ProphetState } from \"../store\";\nimport { ChaosFactorNumberC as ChaosFactorNumber } from \"./ChaosFactorNumber\";\nimport { ChaosState } from \"./ChaosTypes\";\n\nconst mapStateToProps = (state: ProphetState) => {\n    return { chaos: state.chaos };\n};\n\nexport type ChaosFactorProps = ReturnType<typeof mapStateToProps>;\n\nconst ChaosFactor: React.FC<ChaosFactorProps> = (props) => {\n    const chaosFactorNumbers = Array.from({ length: 9 }).map((_, i) => {\n        return (\n            <ChaosFactorNumber\n                number={i + 1}\n                selected={props.chaos === i + 1}\n                key={i + 1}\n            />\n        );\n    });\n\n    return (\n        <ul className=\"list-group list-group-horizontal w-100 chaos-scale\">\n            <li className=\"list-group-item flex-grow-1\">CF</li>\n            {chaosFactorNumbers}\n        </ul>\n    );\n};\n\nexport const ChaosFactorC = connect(mapStateToProps)(ChaosFactor);\n","import { ActionType, createAction } from \"typesafe-actions\";\nimport {\n    ADD_CHARACTER,\n    Character,\n    CLEAR_CHARACTERS,\n    EDIT_CHARACTER,\n    REMOVE_CHARACTER,\n    SELECT_CHARACTER,\n} from \"./CharactersTypes\";\n\nexport const addCharacter = createAction(ADD_CHARACTER, (action) => {\n    return (character: Character) => action(character);\n});\n\nexport const removeCharacter = createAction(REMOVE_CHARACTER, (action) => {\n    return (id: string) => action(id);\n});\n\nexport const editCharacter = createAction(EDIT_CHARACTER, (action) => {\n    return (id: string, data: Partial<Character>) => action({ id, data });\n});\n\nexport const clearCharacters = createAction(CLEAR_CHARACTERS);\n\nexport const selectCharacter = createAction(SELECT_CHARACTER, (action) => {\n    return (id: string) => action(id);\n});\n\nexport type CharactersActions = ActionType<\n    | typeof addCharacter\n    | typeof removeCharacter\n    | typeof editCharacter\n    | typeof clearCharacters\n    | typeof selectCharacter\n>;\n","export interface Character {\n    id: string;\n    name: string;\n    isNPC: boolean;\n    description: string;\n}\n\nexport interface CharactersState {\n    characters: Character[];\n    selectedCharacter?: Character;\n}\n\nexport const ADD_CHARACTER = \"@characters/ADD\";\nexport const REMOVE_CHARACTER = \"@characters/REMOVE\";\nexport const EDIT_CHARACTER = \"@characters/EDIT\";\nexport const CLEAR_CHARACTERS = \"@characters/CLEAR\";\nexport const SELECT_CHARACTER = \"@characters/SELECT\";\n","import { Field, Form, Formik, FormikValues } from \"formik\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal, { ModalProps } from \"react-bootstrap/Modal\";\nimport { connect } from \"react-redux\";\nimport { generate as generateID } from \"shortid\";\nimport { addCharacter } from \"./CharactersActions\";\n\nconst dispatchProps = {\n    addCharacter,\n};\n\nexport type AddCharacterModalProps = ModalProps & typeof dispatchProps;\n\nexport interface AddCharacterForm {\n    name: string;\n    isNPC: boolean;\n}\n\nconst AddCharacterModal: React.FC<AddCharacterModalProps> = (props) => {\n    const initialForm: AddCharacterForm = {\n        isNPC: false,\n        name: \"\",\n    };\n\n    const onSubmit = (values: AddCharacterForm) => {\n        props.addCharacter({\n            description: \"\",\n            id: generateID(),\n            isNPC: values.isNPC,\n            name: values.name,\n        });\n\n        if (props.onHide) {\n            props.onHide();\n        }\n    };\n\n    return (\n        <Modal onHide={props.onHide} show={props.show}>\n            <Formik<AddCharacterForm>\n                onSubmit={onSubmit}\n                initialValues={initialForm}>\n                <Form>\n                    <Modal.Header closeButton={true}>\n                        <Modal.Title as=\"h5\">Add a new character</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"ac-name\">Name</label>\n                            <Field\n                                type=\"text\"\n                                name=\"name\"\n                                id=\"ac-name\"\n                                className=\"form-control\"\n                                required={true}\n                            />\n                        </div>\n                        <div className=\"form-group form-check\">\n                            <Field\n                                name=\"isNPC\"\n                                type=\"checkbox\"\n                                id=\"ac-npc\"\n                                className=\"form-check-input\"\n                            />\n                            <label\n                                className=\"form-check-label\"\n                                htmlFor=\"ac-npc\">\n                                Is NPC?\n                            </label>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button type=\"submit\">Add character</Button>\n                    </Modal.Footer>\n                </Form>\n            </Formik>\n        </Modal>\n    );\n};\n\nexport const AddCharacterModalC = connect(\n    null,\n    dispatchProps,\n)(AddCharacterModal);\n","import React from \"react\";\nimport { Character } from \"./CharactersTypes\";\n\nexport interface CharacterListItemProps {\n    character: Character;\n    viewCharacter: (id: string) => void;\n}\n\nexport const CharactersListItem: React.FC<CharacterListItemProps> = (props) => {\n    return (\n        <button\n            className=\"list-group-item list-group-item-action py-2 border-bottom rounded-0 \n        d-flex align-items-center justify-content-between\"\n            onClick={() => props.viewCharacter(props.character.id)}>\n            <span className=\"font-weight-bold\">{props.character.name}</span>\n            {props.character.isNPC && <span className=\"badge badge-secondary\">NPC</span>}\n        </button>\n    );\n};\n","import { Field, Form, Formik, FormikValues } from \"formik\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal, { ModalProps } from \"react-bootstrap/Modal\";\nimport { connect } from \"react-redux\";\nimport { generate as generateID } from \"shortid\";\nimport { ProphetState } from \"../store\";\nimport { editCharacter } from \"./CharactersActions\";\nimport { Character } from \"./CharactersTypes\";\n\nconst dispatchProps = {\n    editCharacter,\n};\n\nexport type EditCharacterForm = Character;\n\nexport type EditCharacterModalProps = ModalProps &\n    typeof dispatchProps & {\n        character: Character;\n        viewCharacter: (id: string) => void;\n    };\n\nconst EditCharacterModal: React.FC<EditCharacterModalProps> = (props) => {\n    const initialForm: EditCharacterForm = props.character;\n\n    const onSubmit = (values: EditCharacterForm) => {\n        props.editCharacter(values.id, values);\n        props.viewCharacter(values.id);\n    };\n\n    return (\n        <Modal onHide={props.onHide} show={props.show} backdrop=\"static\" keyboard={false}>\n            <Formik<EditCharacterForm> onSubmit={onSubmit} initialValues={initialForm}>\n                <Form>\n                    <Modal.Header>\n                        <Modal.Title as=\"h5\" className=\"d-flex align-items-center\">\n                            Editing: {props.character.name}\n                            {props.character.isNPC && (\n                                <span className=\"badge badge-secondary ml-2\">NPC</span>\n                            )}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"ec-name\">Name</label>\n                            <Field\n                                type=\"text\"\n                                name=\"name\"\n                                id=\"ec-name\"\n                                className=\"form-control\"\n                                required={true}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"ec-description\">Description</label>\n                            <Field\n                                name=\"description\"\n                                id=\"ec-description\"\n                                className=\"form-control\"\n                                required={true}\n                                rows=\"4\"\n                                component=\"textarea\"\n                            />\n                        </div>\n                        <div className=\"form-group form-check\">\n                            <Field\n                                name=\"isNPC\"\n                                type=\"checkbox\"\n                                id=\"ec-npc\"\n                                className=\"form-check-input\"\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"ec-npc\">\n                                Is NPC?\n                            </label>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary\"\n                            onClick={() => props.viewCharacter(props.character.id)}>\n                            Cancel\n                        </button>\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Save changes\n                        </button>\n                    </Modal.Footer>\n                </Form>\n            </Formik>\n        </Modal>\n    );\n};\n\nexport const EditCharacterModalC = connect(\n    null,\n    dispatchProps,\n)(EditCharacterModal);\n","import { Field, Form, Formik, FormikValues } from \"formik\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal, { ModalProps } from \"react-bootstrap/Modal\";\nimport { connect } from \"react-redux\";\nimport { generate as generateID } from \"shortid\";\nimport { removeCharacter } from \"./CharactersActions\";\nimport { Character } from \"./CharactersTypes\";\n\nconst dispatchProps = {\n    removeCharacter,\n};\n\nexport type ViewCharacterModalProps = ModalProps &\n    typeof dispatchProps & {\n        character: Character;\n        editCharacter: (id: string) => void;\n    };\n\nconst ViewCharacterModal: React.FC<ViewCharacterModalProps> = (props) => {\n    const delChar = () => {\n        props.removeCharacter(props.character.id);\n\n        if (props.onHide) {\n            props.onHide();\n        }\n    };\n\n    return (\n        <Modal onHide={props.onHide} show={props.show}>\n            <Modal.Header closeButton={true}>\n                <Modal.Title as=\"h5\" className=\"d-flex align-items-center\">\n                    Character: {props.character.name}\n                    {props.character.isNPC && (\n                        <span className=\"badge badge-secondary ml-2\">NPC</span>\n                    )}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"py-4\">{props.character.description}</Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-danger\" onClick={delChar}>\n                    Delete\n                </button>\n                <button\n                    className=\"btn btn-secondary\"\n                    onClick={() => {\n                        props.editCharacter(props.character.id);\n                    }}>\n                    Edit\n                </button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport const ViewCharacterModalC = connect(\n    null,\n    dispatchProps,\n)(ViewCharacterModal);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ProphetState } from \"../store\";\nimport { editCharacter, selectCharacter } from \"./CharactersActions\";\nimport { CharactersListItem } from \"./CharactersListItem\";\nimport { Character } from \"./CharactersTypes\";\nimport { EditCharacterModalC as EditCharacterModal } from \"./EditCharacterModal\";\nimport { ViewCharacterModalC as ViewCharacterModal } from \"./ViewCharacterModal\";\n\nconst dispatchProps = {\n    editCharacter,\n    selectCharacter,\n};\n\nconst mapStateToProps = (state: ProphetState) => {\n    return {\n        characters: state.characters.characters,\n        selectedCharacter: state.characters.selectedCharacter,\n    };\n};\n\nexport type CharactersListProps = typeof dispatchProps & ReturnType<typeof mapStateToProps>;\n\nconst CharactersList: React.FC<CharactersListProps> = (props) => {\n    const [showViewModal, setShowViewModal] = useState(false);\n    const [showEditModal, setShowEditModal] = useState(false);\n\n    const setViewCharacter = (id: string) => {\n        props.selectCharacter(id);\n        setShowEditModal(false);\n        setShowViewModal(true);\n    };\n\n    const setEditCharacter = (id: string) => {\n        props.selectCharacter(id);\n        setShowViewModal(false);\n        setShowEditModal(true);\n    };\n\n    // Render characters\n    const characters = props.characters.map((c) => {\n        return <CharactersListItem key={c.id} character={c} viewCharacter={setViewCharacter} />;\n    });\n\n    return (\n        <React.Fragment>\n            {props.selectedCharacter && (\n                <React.Fragment>\n                    <ViewCharacterModal\n                        character={props.selectedCharacter}\n                        onHide={() => setShowViewModal(false)}\n                        show={showViewModal}\n                        editCharacter={setEditCharacter}\n                    />\n                    <EditCharacterModal\n                        character={props.selectedCharacter}\n                        show={showEditModal}\n                        viewCharacter={setViewCharacter}\n                    />\n                </React.Fragment>\n            )}\n            <ul className=\"list-group list-group-flush\">{characters}</ul>\n        </React.Fragment>\n    );\n};\n\nexport const CharactersListC = connect(\n    mapStateToProps,\n    dispatchProps,\n)(CharactersList);\n","import React, { useState } from \"react\";\nimport { AddCharacterModalC as AddCharacterModal } from \"./AddCharacterModal\";\nimport { CharactersListC as CharactersList } from \"./CharactersList\";\n\nexport const Characters: React.FC = () => {\n    const [showAddModal, setShowAddModal] = useState(false);\n\n    return (\n        <section className=\"card h-100\">\n            <AddCharacterModal\n                show={showAddModal}\n                onHide={() => setShowAddModal(false)}\n            />\n            <header\n                className=\"card-header font-weight-bold d-flex align-items-center\n            justify-content-between\">\n                Characters\n                <a\n                    href=\"#\"\n                    className=\"fas fa-plus text-decoration-none\"\n                    onClick={() => setShowAddModal(true)}\n                />\n            </header>\n            <CharactersList />\n        </section>\n    );\n};\n","export interface OddsProbability {\n    UpProb: number;\n    Prob: number;\n    LoProb: number;\n}\n\nexport enum Odds {\n    Impossible,\n    NoWay,\n    VeryUnlikely,\n    Unlikely,\n    FiftyFifty,\n    SomewhatLikely,\n    Likely,\n    VeryLikely,\n    NearSureThing,\n    ASureThing,\n    HasToBe,\n}\n\nconst FateOdds = new Map<string, OddsProbability>();\n\nFateOdds.set(`${Odds.HasToBe}-1`, { UpProb: 16, Prob: 80, LoProb: 97 });\nFateOdds.set(`${Odds.HasToBe}-2`, { UpProb: 16, Prob: 85, LoProb: 97 });\nFateOdds.set(`${Odds.HasToBe}-3`, { UpProb: 18, Prob: 90, LoProb: 99 });\nFateOdds.set(`${Odds.HasToBe}-4`, { UpProb: 19, Prob: 95, LoProb: 100 });\nFateOdds.set(`${Odds.HasToBe}-5`, { UpProb: 19, Prob: 95, LoProb: 100 });\nFateOdds.set(`${Odds.HasToBe}-6`, { UpProb: 20, Prob: 100, LoProb: 0 });\nFateOdds.set(`${Odds.HasToBe}-7`, { UpProb: 20, Prob: 100, LoProb: 0 });\nFateOdds.set(`${Odds.HasToBe}-8`, { UpProb: 26, Prob: 130, LoProb: 0 });\nFateOdds.set(`${Odds.HasToBe}-9`, { UpProb: 26, Prob: 145, LoProb: 0 });\n\nFateOdds.set(`${Odds.ASureThing}-1`, { UpProb: 11, Prob: 55, LoProb: 92 });\nFateOdds.set(`${Odds.ASureThing}-2`, { UpProb: 13, Prob: 65, LoProb: 94 });\nFateOdds.set(`${Odds.ASureThing}-3`, { UpProb: 16, Prob: 80, LoProb: 97 });\nFateOdds.set(`${Odds.ASureThing}-4`, { UpProb: 16, Prob: 85, LoProb: 97 });\nFateOdds.set(`${Odds.ASureThing}-5`, { UpProb: 18, Prob: 90, LoProb: 99 });\nFateOdds.set(`${Odds.ASureThing}-6`, { UpProb: 19, Prob: 95, LoProb: 100 });\nFateOdds.set(`${Odds.ASureThing}-7`, { UpProb: 19, Prob: 95, LoProb: 100 });\nFateOdds.set(`${Odds.ASureThing}-8`, { UpProb: 22, Prob: 110, LoProb: 0 });\nFateOdds.set(`${Odds.ASureThing}-9`, { UpProb: 25, Prob: 125, LoProb: 0 });\n\nFateOdds.set(`${Odds.NearSureThing}-1`, { UpProb: 10, Prob: 50, LoProb: 91 });\nFateOdds.set(`${Odds.NearSureThing}-2`, { UpProb: 11, Prob: 55, LoProb: 92 });\nFateOdds.set(`${Odds.NearSureThing}-3`, { UpProb: 15, Prob: 75, LoProb: 96 });\nFateOdds.set(`${Odds.NearSureThing}-4`, { UpProb: 16, Prob: 80, LoProb: 97 });\nFateOdds.set(`${Odds.NearSureThing}-5`, { UpProb: 18, Prob: 90, LoProb: 99 });\nFateOdds.set(`${Odds.NearSureThing}-6`, { UpProb: 19, Prob: 95, LoProb: 100 });\nFateOdds.set(`${Odds.NearSureThing}-7`, { UpProb: 19, Prob: 95, LoProb: 100 });\nFateOdds.set(`${Odds.NearSureThing}-8`, { UpProb: 20, Prob: 100, LoProb: 0 });\nFateOdds.set(`${Odds.NearSureThing}-9`, { UpProb: 23, Prob: 115, LoProb: 0 });\n\nFateOdds.set(`${Odds.VeryLikely}-1`, { UpProb: 9, Prob: 45, LoProb: 90 });\nFateOdds.set(`${Odds.VeryLikely}-2`, { UpProb: 10, Prob: 50, LoProb: 91 });\nFateOdds.set(`${Odds.VeryLikely}-3`, { UpProb: 13, Prob: 65, LoProb: 94 });\nFateOdds.set(`${Odds.VeryLikely}-4`, { UpProb: 15, Prob: 75, LoProb: 96 });\nFateOdds.set(`${Odds.VeryLikely}-5`, { UpProb: 16, Prob: 85, LoProb: 97 });\nFateOdds.set(`${Odds.VeryLikely}-6`, { UpProb: 18, Prob: 90, LoProb: 99 });\nFateOdds.set(`${Odds.VeryLikely}-7`, { UpProb: 19, Prob: 95, LoProb: 100 });\nFateOdds.set(`${Odds.VeryLikely}-8`, { UpProb: 19, Prob: 95, LoProb: 100 });\nFateOdds.set(`${Odds.VeryLikely}-9`, { UpProb: 21, Prob: 105, LoProb: 0 });\n\nFateOdds.set(`${Odds.Likely}-1`, { UpProb: 5, Prob: 25, LoProb: 86 });\nFateOdds.set(`${Odds.Likely}-2`, { UpProb: 7, Prob: 35, LoProb: 88 });\nFateOdds.set(`${Odds.Likely}-3`, { UpProb: 10, Prob: 50, LoProb: 91 });\nFateOdds.set(`${Odds.Likely}-4`, { UpProb: 11, Prob: 55, LoProb: 92 });\nFateOdds.set(`${Odds.Likely}-5`, { UpProb: 15, Prob: 75, LoProb: 96 });\nFateOdds.set(`${Odds.Likely}-6`, { UpProb: 16, Prob: 85, LoProb: 97 });\nFateOdds.set(`${Odds.Likely}-7`, { UpProb: 18, Prob: 90, LoProb: 99 });\nFateOdds.set(`${Odds.Likely}-8`, { UpProb: 19, Prob: 95, LoProb: 100 });\nFateOdds.set(`${Odds.Likely}-9`, { UpProb: 200, Prob: 100, LoProb: 0 });\n\nFateOdds.set(`${Odds.SomewhatLikely}-1`, { UpProb: 4, Prob: 20, LoProb: 85 });\nFateOdds.set(`${Odds.SomewhatLikely}-2`, { UpProb: 5, Prob: 25, LoProb: 86 });\nFateOdds.set(`${Odds.SomewhatLikely}-3`, { UpProb: 9, Prob: 45, LoProb: 90 });\nFateOdds.set(`${Odds.SomewhatLikely}-4`, { UpProb: 10, Prob: 50, LoProb: 91 });\nFateOdds.set(`${Odds.SomewhatLikely}-5`, { UpProb: 13, Prob: 65, LoProb: 94 });\nFateOdds.set(`${Odds.SomewhatLikely}-6`, { UpProb: 16, Prob: 80, LoProb: 97 });\nFateOdds.set(`${Odds.SomewhatLikely}-7`, { UpProb: 16, Prob: 85, LoProb: 97 });\nFateOdds.set(`${Odds.SomewhatLikely}-8`, { UpProb: 18, Prob: 90, LoProb: 99 });\nFateOdds.set(`${Odds.SomewhatLikely}-9`, { UpProb: 19, Prob: 95, LoProb: 100 });\n\nFateOdds.set(`${Odds.FiftyFifty}-1`, { UpProb: 2, Prob: 10, LoProb: 83 });\nFateOdds.set(`${Odds.FiftyFifty}-2`, { UpProb: 3, Prob: 15, LoProb: 84 });\nFateOdds.set(`${Odds.FiftyFifty}-3`, { UpProb: 5, Prob: 25, LoProb: 86 });\nFateOdds.set(`${Odds.FiftyFifty}-4`, { UpProb: 7, Prob: 35, LoProb: 88 });\nFateOdds.set(`${Odds.FiftyFifty}-5`, { UpProb: 10, Prob: 50, LoProb: 91 });\nFateOdds.set(`${Odds.FiftyFifty}-6`, { UpProb: 13, Prob: 65, LoProb: 94 });\nFateOdds.set(`${Odds.FiftyFifty}-7`, { UpProb: 15, Prob: 75, LoProb: 96 });\nFateOdds.set(`${Odds.FiftyFifty}-8`, { UpProb: 16, Prob: 85, LoProb: 97 });\nFateOdds.set(`${Odds.FiftyFifty}-9`, { UpProb: 19, Prob: 95, LoProb: 100 });\n\nFateOdds.set(`${Odds.Unlikely}-1`, { UpProb: 1, Prob: 5, LoProb: 82 });\nFateOdds.set(`${Odds.Unlikely}-2`, { UpProb: 2, Prob: 10, LoProb: 83 });\nFateOdds.set(`${Odds.Unlikely}-3`, { UpProb: 3, Prob: 15, LoProb: 84 });\nFateOdds.set(`${Odds.Unlikely}-4`, { UpProb: 4, Prob: 20, LoProb: 85 });\nFateOdds.set(`${Odds.Unlikely}-5`, { UpProb: 7, Prob: 35, LoProb: 88 });\nFateOdds.set(`${Odds.Unlikely}-6`, { UpProb: 10, Prob: 50, LoProb: 91 });\nFateOdds.set(`${Odds.Unlikely}-7`, { UpProb: 11, Prob: 55, LoProb: 92 });\nFateOdds.set(`${Odds.Unlikely}-8`, { UpProb: 15, Prob: 75, LoProb: 96 });\nFateOdds.set(`${Odds.Unlikely}-9`, { UpProb: 18, Prob: 90, LoProb: 99 });\n\nFateOdds.set(`${Odds.VeryUnlikely}-1`, { UpProb: 1, Prob: 5, LoProb: 82 });\nFateOdds.set(`${Odds.VeryUnlikely}-2`, { UpProb: 1, Prob: 5, LoProb: 82 });\nFateOdds.set(`${Odds.VeryUnlikely}-3`, { UpProb: 2, Prob: 10, LoProb: 83 });\nFateOdds.set(`${Odds.VeryUnlikely}-4`, { UpProb: 3, Prob: 15, LoProb: 84 });\nFateOdds.set(`${Odds.VeryUnlikely}-5`, { UpProb: 5, Prob: 25, LoProb: 86 });\nFateOdds.set(`${Odds.VeryUnlikely}-6`, { UpProb: 9, Prob: 45, LoProb: 90 });\nFateOdds.set(`${Odds.VeryUnlikely}-7`, { UpProb: 10, Prob: 50, LoProb: 91 });\nFateOdds.set(`${Odds.VeryUnlikely}-8`, { UpProb: 13, Prob: 65, LoProb: 94 });\nFateOdds.set(`${Odds.VeryUnlikely}-9`, { UpProb: 16, Prob: 85, LoProb: 97 });\n\nFateOdds.set(`${Odds.NoWay}-1`, { UpProb: 0, Prob: 0, LoProb: 83 });\nFateOdds.set(`${Odds.NoWay}-2`, { UpProb: 1, Prob: 5, LoProb: 82 });\nFateOdds.set(`${Odds.NoWay}-3`, { UpProb: 1, Prob: 5, LoProb: 82 });\nFateOdds.set(`${Odds.NoWay}-4`, { UpProb: 2, Prob: 10, LoProb: 83 });\nFateOdds.set(`${Odds.NoWay}-5`, { UpProb: 3, Prob: 15, LoProb: 84 });\nFateOdds.set(`${Odds.NoWay}-6`, { UpProb: 5, Prob: 25, LoProb: 86 });\nFateOdds.set(`${Odds.NoWay}-7`, { UpProb: 7, Prob: 35, LoProb: 88 });\nFateOdds.set(`${Odds.NoWay}-8`, { UpProb: 10, Prob: 50, LoProb: 91 });\nFateOdds.set(`${Odds.NoWay}-9`, { UpProb: 15, Prob: 75, LoProb: 96 });\n\nFateOdds.set(`${Odds.Impossible}-1`, { UpProb: 0, Prob: -20, LoProb: 77 });\nFateOdds.set(`${Odds.Impossible}-2`, { UpProb: 0, Prob: 0, LoProb: 81 });\nFateOdds.set(`${Odds.Impossible}-3`, { UpProb: 0, Prob: 0, LoProb: 81 });\nFateOdds.set(`${Odds.Impossible}-4`, { UpProb: 1, Prob: 5, LoProb: 82 });\nFateOdds.set(`${Odds.Impossible}-5`, { UpProb: 1, Prob: 5, LoProb: 82 });\nFateOdds.set(`${Odds.Impossible}-6`, { UpProb: 2, Prob: 10, LoProb: 83 });\nFateOdds.set(`${Odds.Impossible}-7`, { UpProb: 3, Prob: 15, LoProb: 84 });\nFateOdds.set(`${Odds.Impossible}-8`, { UpProb: 5, Prob: 25, LoProb: 86 });\nFateOdds.set(`${Odds.Impossible}-9`, { UpProb: 10, Prob: 50, LoProb: 91 });\n\nexport { FateOdds };\n","import { ActionType, createAction } from \"typesafe-actions\";\nimport {\n    CLEAR_LOG,\n    DELETE_LOG,\n    EDIT_LOG,\n    LogInputMode,\n    LogItem,\n    POST_LOG,\n    SET_INPUT_MODE,\n} from \"./LogTypes\";\n\n// postLog represents a Redux action creator for posting new items to the log\nexport const postLog = createAction(POST_LOG, (action) => {\n    return (item: LogItem) => action(item);\n});\n\n// deleteLog represents a Redux action creator for deleting a log item from the log\nexport const deleteLog = createAction(DELETE_LOG, (action) => {\n    return (id: string) => action(id);\n});\n\n// clearLog represents a Redux action creator for clearing all log items from the log\nexport const clearLog = createAction(CLEAR_LOG);\n\nexport const setInputMode = createAction(SET_INPUT_MODE, (action) => {\n    return (mode: LogInputMode) => action(mode);\n});\n\nexport const editLog = createAction(EDIT_LOG, (action) => {\n    return (id: string, item: LogItem) => action({ id, item });\n});\n\nexport type LogActions = ActionType<\n    typeof postLog | typeof deleteLog | typeof clearLog | typeof setInputMode | typeof editLog\n>;\n","import { Field, Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Odds } from \"../../utils/fateOdds\";\nimport { editLog } from \"../LogActions\";\nimport { LogDiceResultItem } from \"../LogTypes\";\n\nexport interface LogDiceResultForm {\n    description: string;\n}\n\nconst dispatchProps = {\n    editLog,\n};\n\nexport type LogDiceResultProps = typeof dispatchProps & {\n    item: LogDiceResultItem;\n};\n\nconst LogDiceResult: React.FC<LogDiceResultProps> = (props) => {\n    const initialFormValues: LogDiceResultForm = { description: props.item.description };\n    const [editing, setEditing] = useState(false);\n\n    const onChangeDescription = (values: LogDiceResultForm) => {\n        setEditing(false);\n        props.editLog(props.item.id, { ...props.item, description: values.description });\n    };\n\n    return (\n        <li className=\"list-group-item py-2 list-group-item-primary\">\n            <span className=\"d-flex\">\n                <strong className=\"mr-1\">Roll:</strong>\n                <i>{props.item.diceString}</i>\n            </span>\n            <span className=\"d-flex\">\n                <strong className=\"mr-1\">Result:</strong>\n                {props.item.roll}\n            </span>\n            {props.item.description && !editing && <i>{props.item.description}</i>}\n            {!props.item.description && !editing && (\n                <a href=\"#\" onClick={() => setEditing(true)}>\n                    Click to edit roll description\n                </a>\n            )}\n            {editing && (\n                <Formik onSubmit={onChangeDescription} initialValues={initialFormValues}>\n                    <Form>\n                        <Field\n                            className=\"form-control form-control-sm\"\n                            name=\"description\"\n                            placeholder=\"Enter description\"\n                        />\n                    </Form>\n                </Formik>\n            )}\n        </li>\n    );\n};\n\nexport const LogDiceResultC = connect(\n    null,\n    dispatchProps,\n)(LogDiceResult);\n","import { Field, Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Odds } from \"../../utils/fateOdds\";\nimport { editLog } from \"../LogActions\";\nimport { LogFateResultItem } from \"../LogTypes\";\n\nexport interface LogFateResultForm {\n    exceptional: string;\n}\n\nconst dispatchProps = {\n    editLog,\n};\n\nexport type LogFateResultProps = typeof dispatchProps & {\n    item: LogFateResultItem;\n};\n\nconst LogFateResult: React.FC<LogFateResultProps> = (props) => {\n    const initialFormValues: LogFateResultForm = { exceptional: props.item.exceptionalContent };\n    const [editing, setEditing] = useState(false);\n\n    const onChangeExceptionalContent = (values: LogFateResultForm) => {\n        setEditing(false);\n        props.editLog(props.item.id, { ...props.item, exceptionalContent: values.exceptional });\n    };\n\n    return (\n        <li className=\"list-group-item py-2 list-group-item-primary\">\n            <span className=\"d-flex\">\n                <strong className=\"mr-1\">Question:</strong>\n                <i>{props.item.question}</i>\n            </span>\n            <span className=\"d-flex\">\n                <strong className=\"mr-1\">Answer:</strong>\n                {props.item.exceptional && \"EXCEPTIONAL \"}\n                {props.item.answer ? \"Yes.\" : \"No.\"}\n            </span>\n            {props.item.exceptional && props.item.exceptionalContent && !editing && (\n                <i>{props.item.exceptionalContent}</i>\n            )}\n            {props.item.exceptional && !props.item.exceptionalContent && !editing && (\n                <a href=\"#\" onClick={() => setEditing(true)}>\n                    Click to edit exceptional result description\n                </a>\n            )}\n            {props.item.exceptional && editing && (\n                <Formik onSubmit={onChangeExceptionalContent} initialValues={initialFormValues}>\n                    <Form>\n                        <Field\n                            className=\"form-control form-control-sm\"\n                            name=\"exceptional\"\n                            placeholder=\"Enter exceptional result message\"\n                        />\n                    </Form>\n                </Formik>\n            )}\n            <small className=\"d-flex justify-content-between mt-1\">\n                <span>Rolled {props.item.roll}</span>\n                <span>Chaos factor was {props.item.chaosFactor}</span>\n                <span>\n                    Probabilities were ({props.item.probability.UpProb}–\n                    {props.item.probability.Prob}–{props.item.probability.LoProb})\n                </span>\n                <span>Odds were {Odds[props.item.odds]}</span>\n            </small>\n        </li>\n    );\n};\n\nexport const LogFateResultC = connect(\n    null,\n    dispatchProps,\n)(LogFateResult);\n","import React from \"react\";\nimport { LogMessageItem } from \"../LogTypes\";\n\nexport interface LogMessageProps {\n    item: LogMessageItem;\n}\n\nexport const LogMessage: React.FC<LogMessageProps> = (props) => {\n    return <li className=\"list-group-item py-2 font-italic text-muted\">{props.item.content}</li>;\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { LogNamedMessageItem } from \"../LogTypes\";\n\nexport interface LogNamedMessageProps {\n    item: LogNamedMessageItem;\n}\n\nexport const LogNamedMessage: React.FC<LogNamedMessageProps> = (props) => {\n    return (\n        <li className=\"list-group-item py-2\" key={props.item.id}>\n            <span className=\"w-100 d-flex\">\n                <strong className=\"mr-1\">\n                    {props.item.name}\n                    {props.item.action ? \"\" : \":\"}\n                </strong>\n                <div className={`mb-0 text-break md ${props.item.action ? \"md-action\" : \"\"}`}>\n                    <ReactMarkdown source={props.item.content} />\n                </div>\n            </span>\n        </li>\n    );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { connect } from \"react-redux\";\nimport { ProphetState } from \"../store\";\nimport { Odds } from \"../utils/fateOdds\";\nimport { LogDiceResultC as LogDiceResult } from \"./items/LogDiceResult\";\nimport { LogFateResultC as LogFateResult } from \"./items/LogFateResult\";\nimport { LogMessage } from \"./items/LogMessage\";\nimport { LogNamedMessage } from \"./items/LogNamedMessage\";\nimport { LogBaseItem, LogItemType } from \"./LogTypes\";\n\nconst mapStateToProps = (state: ProphetState) => ({\n    items: state.log.items,\n});\n\nexport type LogContentProps = ReturnType<typeof mapStateToProps>;\n\nconst LogContent: React.FC<LogContentProps> = (props) => {\n    const listRef = useRef<HTMLUListElement>(null);\n\n    // Update log scroll position when new item is added\n    useEffect(() => {\n        const el = listRef.current;\n        if (el && el.lastChild) {\n            const lastChild = el.lastChild as HTMLLIElement;\n            lastChild.scrollIntoView(false);\n        }\n    });\n\n    // Render the log items\n    const renderedItems = props.items.map((item) => {\n        switch (item.type) {\n            case LogItemType.Message:\n                return <LogMessage item={item} key={item.id} />;\n            case LogItemType.NamedMessage:\n                return <LogNamedMessage item={item} key={item.id} />;\n            case LogItemType.FateResult:\n                return <LogFateResult item={item} key={item.id} />;\n            case LogItemType.DiceResult:\n                return <LogDiceResult item={item} key={item.id} />;\n        }\n    });\n\n    return (\n        <ul className=\"list-group list-group-flush h-100 overflow-auto log\" ref={listRef}>\n            {renderedItems}\n        </ul>\n    );\n};\n\nexport const LogContentC = connect(mapStateToProps)(LogContent);\n","import { Field, Form, Formik, FormikActions } from \"formik\";\nimport React, { useRef, useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { connect, MapDispatchToProps } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { generate as generateID } from \"shortid\";\nimport { Character } from \"../characters/CharactersTypes\";\nimport { ProphetState } from \"../store\";\nimport { LogActions, postLog, setInputMode } from \"./LogActions\";\nimport { LogBaseItem, LogItem, LogItemType, LogMessageItem, LogNamedMessageItem } from \"./LogTypes\";\n\nconst dispatchProps = {\n    postLog,\n    setInputMode,\n};\n\nconst mapStateToProps = (state: ProphetState) => {\n    return {\n        characters: state.characters.characters,\n        inputMode: state.log.inputMode,\n    };\n};\n\nexport interface FooterPostForm {\n    content: string;\n}\n\nexport type LogFooterProps = typeof dispatchProps & ReturnType<typeof mapStateToProps>;\n\nconst LogFooter: React.FC<LogFooterProps> = (props) => {\n    const inputRef = useRef<HTMLInputElement>();\n\n    const getInputCharacter = () => {\n        if (props.inputMode.type === \"character\" && props.inputMode.characterId) {\n            return props.characters.find((c) => c.id === props.inputMode.characterId);\n        } else {\n            return undefined;\n        }\n    };\n\n    const onSubmit = (values: FooterPostForm, actions: FormikActions<FooterPostForm>) => {\n        // Clear the data in the current form\n        actions.resetForm();\n\n        // Post the new log\n        let item;\n        const meta = {\n            id: generateID(),\n            sent_at: Date.now(),\n        };\n\n        const character = getInputCharacter();\n        if (character) {\n            item = {\n                ...meta,\n                action: values.content.startsWith(\"*\"),\n                content: values.content,\n                name: character.name,\n                type: LogItemType.NamedMessage,\n            } as LogNamedMessageItem;\n        } else {\n            item = {\n                ...meta,\n                content: values.content,\n                type: LogItemType.Message,\n            } as LogMessageItem;\n        }\n        props.postLog(item);\n    };\n\n    const onChangeInputMode = (item: string) => {\n        if (item === \"narration\") {\n            props.setInputMode({ type: \"narration\", characterId: \"\" });\n        } else {\n            const character = JSON.parse(item) as Character;\n            props.setInputMode({ type: \"character\", characterId: character.id });\n        }\n        if (inputRef.current) {\n            inputRef.current.focus();\n        }\n    };\n\n    const getInputModeLabel = () => {\n        const character = getInputCharacter();\n        if (character) {\n            return <strong>{character.name}</strong>;\n        } else {\n            return \"Narration\";\n        }\n    };\n\n    const dropdownCharacters = props.characters.map((c) => {\n        return (\n            <Dropdown.Item\n                className=\"d-flex align-items-center\"\n                key={c.id}\n                eventKey={JSON.stringify(c)}>\n                <i className=\"fas fa-user mr-2\" />\n                {c.name}\n            </Dropdown.Item>\n        );\n    });\n\n    return (\n        <div className=\"card-footer\">\n            <Formik<FooterPostForm> initialValues={{ content: \"\" }} onSubmit={onSubmit}>\n                <Form>\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <Dropdown onSelect={onChangeInputMode}>\n                                <Dropdown.Toggle id=\"log-character\" size=\"sm\" variant=\"secondary\">\n                                    {getInputModeLabel()}\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    <Dropdown.Item\n                                        className=\"d-flex \n                                    align-items-center font-weight-bold\"\n                                        eventKey=\"narration\">\n                                        <i className=\"fas fa-feather mr-2\" />\n                                        Narration\n                                    </Dropdown.Item>\n                                    <Dropdown.Divider className=\"my-1\" />\n                                    {dropdownCharacters}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </div>\n                        <Field\n                            type=\"text\"\n                            name=\"content\"\n                            placeholder=\"Type something to add to the log…\"\n                            className=\"form-control form-control-sm\"\n                            innerRef={inputRef}\n                        />\n                        <div className=\"input-group-append\">\n                            <button type=\"submit\" className=\"btn btn-sm btn-primary\">\n                                Post\n                            </button>\n                        </div>\n                    </div>\n                </Form>\n            </Formik>\n        </div>\n    );\n};\n\n// Export the Redux-connected component\nexport const LogFooterC = connect(\n    mapStateToProps,\n    dispatchProps,\n)(LogFooter);\n","import React, { useState } from \"react\";\nimport { LogContentC as LogContent } from \"./LogContent\";\nimport { LogFooterC as LogFooter } from \"./LogFooter\";\nimport { LogBaseItem } from \"./LogTypes\";\n\nexport const Log: React.FC = () => {\n    const [log, setLog] = useState<LogBaseItem[]>([]);\n\n    return (\n        <section className=\"card h-100\">\n            <header className=\"card-header font-weight-bold\">Log</header>\n            <LogContent />\n            <LogFooter />\n        </section>\n    );\n};\n","import { ActionType, createAction } from \"typesafe-actions\";\nimport {\n    ADD_THREAD,\n    CLEAR_THREADS,\n    EDIT_THREAD,\n    REMOVE_THREAD,\n    SELECT_THREAD,\n    Thread,\n} from \"./ThreadsTypes\";\n\nexport const addThread = createAction(ADD_THREAD, (action) => {\n    return (thread: Thread) => action(thread);\n});\n\nexport const removeThread = createAction(REMOVE_THREAD, (action) => {\n    return (id: string) => action(id);\n});\n\nexport const editThread = createAction(EDIT_THREAD, (action) => {\n    return (id: string, data: Partial<Thread>) => action({ id, data });\n});\n\nexport const clearThreads = createAction(CLEAR_THREADS);\n\nexport const selectThread = createAction(SELECT_THREAD, (action) => {\n    return (id: string) => action(id);\n});\n\nexport type ThreadsActions = ActionType<\n    | typeof addThread\n    | typeof removeThread\n    | typeof editThread\n    | typeof clearThreads\n    | typeof selectThread\n>;\n","export interface Thread {\n    id: string;\n    name: string;\n    description: string;\n}\n\nexport interface ThreadsState {\n    threads: Thread[];\n    selectedThread?: Thread;\n}\n\nexport const ADD_THREAD = \"@threads/ADD\";\nexport const REMOVE_THREAD = \"@threads/REMOVE\";\nexport const EDIT_THREAD = \"@threads/EDIT\";\nexport const CLEAR_THREADS = \"@threads/CLEAR\";\nexport const SELECT_THREAD = \"@threads/SELECT\";\n","import { Field, Form, Formik, FormikValues } from \"formik\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal, { ModalProps } from \"react-bootstrap/Modal\";\nimport { connect } from \"react-redux\";\nimport { generate as generateID } from \"shortid\";\nimport { addThread } from \"./ThreadsActions\";\n\nconst dispatchProps = {\n    addThread,\n};\n\nexport type AddThreadModalProps = ModalProps & typeof dispatchProps;\n\nexport interface AddThreadForm {\n    name: string;\n    description: string;\n}\n\nconst AddThreadModal: React.FC<AddThreadModalProps> = (props) => {\n    const initialForm: AddThreadForm = {\n        description: \"\",\n        name: \"\",\n    };\n\n    const onSubmit = (values: AddThreadForm) => {\n        props.addThread({\n            description: \"\",\n            id: generateID(),\n            name: values.name,\n        });\n\n        if (props.onHide) {\n            props.onHide();\n        }\n    };\n\n    return (\n        <Modal onHide={props.onHide} show={props.show}>\n            <Formik<AddThreadForm> onSubmit={onSubmit} initialValues={initialForm}>\n                <Form>\n                    <Modal.Header closeButton={true}>\n                        <Modal.Title as=\"h5\">Add a new thread</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"ac-name\">Name</label>\n                            <Field\n                                type=\"text\"\n                                name=\"name\"\n                                id=\"ac-name\"\n                                className=\"form-control\"\n                                required={true}\n                            />\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button type=\"submit\">Add thread</Button>\n                    </Modal.Footer>\n                </Form>\n            </Formik>\n        </Modal>\n    );\n};\n\nexport const AddThreadModalC = connect(\n    null,\n    dispatchProps,\n)(AddThreadModal);\n","import { Field, Form, Formik, FormikValues } from \"formik\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal, { ModalProps } from \"react-bootstrap/Modal\";\nimport { connect } from \"react-redux\";\nimport { generate as generateID } from \"shortid\";\nimport { ProphetState } from \"../store\";\nimport { editThread } from \"./ThreadsActions\";\nimport { Thread } from \"./ThreadsTypes\";\n\nconst dispatchProps = {\n    editThread,\n};\n\nexport type EditThreadForm = Thread;\n\nexport type EditThreadModalProps = ModalProps &\n    typeof dispatchProps & {\n        thread: Thread;\n        viewThread: (id: string) => void;\n    };\n\nconst EditThreadModal: React.FC<EditThreadModalProps> = (props) => {\n    const initialForm: EditThreadForm = props.thread;\n\n    const onSubmit = (values: EditThreadForm) => {\n        props.editThread(values.id, values);\n        props.viewThread(values.id);\n    };\n\n    return (\n        <Modal onHide={props.onHide} show={props.show} backdrop=\"static\" keyboard={false}>\n            <Formik<EditThreadForm> onSubmit={onSubmit} initialValues={initialForm}>\n                <Form>\n                    <Modal.Header>\n                        <Modal.Title as=\"h5\" className=\"d-flex align-items-center\">\n                            Editing: {props.thread.name}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"ec-name\">Name</label>\n                            <Field\n                                type=\"text\"\n                                name=\"name\"\n                                id=\"ec-name\"\n                                className=\"form-control\"\n                                required={true}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"ec-description\">Description</label>\n                            <Field\n                                name=\"description\"\n                                id=\"ec-description\"\n                                className=\"form-control\"\n                                required={true}\n                                rows=\"4\"\n                                component=\"textarea\"\n                            />\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary\"\n                            onClick={() => props.viewThread(props.thread.id)}>\n                            Cancel\n                        </button>\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Save changes\n                        </button>\n                    </Modal.Footer>\n                </Form>\n            </Formik>\n        </Modal>\n    );\n};\n\nexport const EditThreadModalC = connect(\n    null,\n    dispatchProps,\n)(EditThreadModal);\n","import React from \"react\";\nimport { Thread } from \"./ThreadsTypes\";\n\nexport interface ThreadListItemProps {\n    thread: Thread;\n    viewThread: (id: string) => void;\n}\n\nexport const ThreadListItem: React.FC<ThreadListItemProps> = (props) => {\n    return (\n        <button\n            className=\"list-group-item list-group-item-action py-2 border-bottom rounded-0 \n        d-flex align-items-center justify-content-between\"\n            onClick={() => props.viewThread(props.thread.id)}>\n            <span className=\"font-weight-bold\">{props.thread.name}</span>\n        </button>\n    );\n};\n","import { Field, Form, Formik, FormikValues } from \"formik\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal, { ModalProps } from \"react-bootstrap/Modal\";\nimport { connect } from \"react-redux\";\nimport { generate as generateID } from \"shortid\";\nimport { removeThread } from \"./ThreadsActions\";\nimport { Thread } from \"./ThreadsTypes\";\n\nconst dispatchProps = {\n    removeThread,\n};\n\nexport type ViewThreadModalProps = ModalProps &\n    typeof dispatchProps & {\n        thread: Thread;\n        editThread: (id: string) => void;\n    };\n\nconst EditThreadModal: React.FC<ViewThreadModalProps> = (props) => {\n    const delThread = () => {\n        props.removeThread(props.thread.id);\n\n        if (props.onHide) {\n            props.onHide();\n        }\n    };\n\n    return (\n        <Modal onHide={props.onHide} show={props.show}>\n            <Modal.Header closeButton={true}>\n                <Modal.Title as=\"h5\" className=\"d-flex align-items-center\">\n                    Thread: {props.thread.name}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"py-4\">{props.thread.description}</Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-danger\" onClick={delThread}>\n                    Delete\n                </button>\n                <button\n                    className=\"btn btn-secondary\"\n                    onClick={() => {\n                        props.editThread(props.thread.id);\n                    }}>\n                    Edit\n                </button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport const ViewThreadModalC = connect(\n    null,\n    dispatchProps,\n)(EditThreadModal);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ProphetState } from \"../store\";\nimport { EditThreadModalC as EditThreadModal } from \"./EditThreadModal\";\nimport { ThreadListItem } from \"./ThreadListItem\";\nimport { editThread, selectThread } from \"./ThreadsActions\";\nimport { Thread } from \"./ThreadsTypes\";\nimport { ViewThreadModalC as ViewThreadModal } from \"./ViewThreadModal\";\n\nconst dispatchProps = {\n    editThread,\n    selectThread,\n};\n\nconst mapStateToProps = (state: ProphetState) => {\n    return {\n        selectedThread: state.threads.selectedThread,\n        threads: state.threads.threads,\n    };\n};\n\nexport type ThreadsListProps = typeof dispatchProps & ReturnType<typeof mapStateToProps>;\n\nconst ThreadsList: React.FC<ThreadsListProps> = (props) => {\n    const [showViewModal, setShowViewModal] = useState(false);\n    const [showEditModal, setShowEditModal] = useState(false);\n\n    const setViewThread = (id: string) => {\n        props.selectThread(id);\n        setShowEditModal(false);\n        setShowViewModal(true);\n    };\n\n    const setEditThread = (id: string) => {\n        props.selectThread(id);\n        setShowViewModal(false);\n        setShowEditModal(true);\n    };\n\n    // Render characters\n    const threads = props.threads.map((c) => {\n        return <ThreadListItem key={c.id} thread={c} viewThread={setViewThread} />;\n    });\n\n    return (\n        <React.Fragment>\n            {props.selectedThread && (\n                <React.Fragment>\n                    <ViewThreadModal\n                        thread={props.selectedThread}\n                        onHide={() => setShowViewModal(false)}\n                        show={showViewModal}\n                        editThread={setEditThread}\n                    />\n                    <EditThreadModal\n                        thread={props.selectedThread}\n                        show={showEditModal}\n                        viewThread={setViewThread}\n                    />\n                </React.Fragment>\n            )}\n            <ul className=\"list-group list-group-flush\">{threads}</ul>\n        </React.Fragment>\n    );\n};\n\nexport const ThreadsListC = connect(\n    mapStateToProps,\n    dispatchProps,\n)(ThreadsList);\n","import React, { useState } from \"react\";\nimport { AddThreadModalC as AddThreadModal } from \"./AddThreadModal\";\nimport { ThreadsListC as ThreadsList } from \"./ThreadsList\";\n\nexport const Threads: React.FC = () => {\n    const [showAddModal, setShowAddModal] = useState(false);\n\n    return (\n        <section className=\"card h-100\">\n            <AddThreadModal show={showAddModal} onHide={() => setShowAddModal(false)} />\n            <header\n                className=\"card-header font-weight-bold d-flex align-items-center\n            justify-content-between\">\n                Threads\n                <a\n                    href=\"#\"\n                    className=\"fas fa-plus text-decoration-none\"\n                    onClick={() => setShowAddModal(true)}\n                />\n            </header>\n            <ThreadsList />\n        </section>\n    );\n};\n","import { Dice } from \"dice-typescript\";\nimport { Field, Form, Formik, FormikActions } from \"formik\";\nimport React, { FormEvent, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { generate as generateID } from \"shortid\";\nimport { postLog } from \"../log/LogActions\";\nimport { LogDiceResultItem, LogFateResultItem, LogItemType } from \"../log/LogTypes\";\nimport { ProphetState } from \"../store\";\nimport { FateOdds, Odds } from \"../utils/fateOdds\";\n\nconst mapStateToProps = (state: ProphetState) => {\n    return { chaosFactor: state.chaos };\n};\n\nconst dispatchProps = {\n    postLog,\n};\n\nexport interface ToolbarFateQuestionForm {\n    question: string;\n}\n\nexport interface ToolbarFateDiceForm {\n    roll: string;\n}\n\nexport type ToolbarFateProps = ReturnType<typeof mapStateToProps> & typeof dispatchProps;\n\nconst ToolbarFate: React.FC<ToolbarFateProps> = (props) => {\n    const initialQuestionValues: ToolbarFateQuestionForm = { question: \"\" };\n    const initialDiceValues: ToolbarFateDiceForm = { roll: \"\" };\n    const [odds, setOdds] = useState(Odds.FiftyFifty.valueOf());\n    const [ranges, setRanges] = useState(FateOdds.get(`${Odds.FiftyFifty}-${props.chaosFactor}`));\n\n    const onSelectOdds = (e: FormEvent<HTMLSelectElement>) => {\n        const target = e.target as HTMLSelectElement;\n        setOdds(Number(target.value));\n    };\n\n    const rollFate = () => {\n        return Math.floor(Math.random() * (100 - 1)) + 1;\n    };\n\n    const getFateSuccessChance = (bound: number) => {\n        const chance = bound < 0 ? 0 : bound > 100 ? 100 : bound;\n        if (chance <= 30) {\n            return <strong className=\"text-danger\">{chance}%</strong>;\n        } else if (chance >= 70) {\n            return <strong className=\"text-success\">{chance}%</strong>;\n        } else {\n            return <strong>{chance}%</strong>;\n        }\n    };\n\n    const onSubmitFateQuestion = (\n        values: ToolbarFateQuestionForm,\n        actions: FormikActions<ToolbarFateQuestionForm>,\n    ) => {\n        actions.resetForm();\n        if (ranges) {\n            const roll = rollFate();\n            const item: LogFateResultItem = {\n                answer: roll <= ranges.Prob,\n                chaosFactor: props.chaosFactor,\n                exceptional: roll <= ranges.UpProb || roll >= ranges.LoProb,\n                exceptionalContent: \"\",\n                id: generateID(),\n                odds,\n                probability: ranges,\n                question: values.question,\n                roll,\n                sent_at: Date.now(),\n                type: LogItemType.FateResult,\n            };\n            props.postLog(item);\n        }\n    };\n\n    const onSubmitDiceRoll = (\n        values: ToolbarFateDiceForm,\n        actions: FormikActions<ToolbarFateDiceForm>,\n    ) => {\n        actions.resetForm();\n        const dice = new Dice();\n        const roll = dice.roll(values.roll);\n        if (!roll.errors.length) {\n            const item: LogDiceResultItem = {\n                description: \"\",\n                diceString: values.roll,\n                id: generateID(),\n                roll: roll.total,\n                sent_at: Date.now(),\n                type: LogItemType.DiceResult,\n            };\n            props.postLog(item);\n        }\n    };\n\n    useEffect(() => {\n        if (Odds[odds]) {\n            const prob = FateOdds.get(`${odds}-${props.chaosFactor}`);\n            if (prob) {\n                setRanges(prob);\n            }\n        }\n    });\n\n    return (\n        <section className=\"h-100 w-50 border-right overflow-auto\">\n            <div className=\"row mx-2 my-2\">\n                <div className=\"col-md-6\">\n                    <div className=\"form-group mb-2\">\n                        <label htmlFor=\"fate-odds\">Odds</label>\n                        <select\n                            className=\"custom-select custom-select-sm\"\n                            id=\"fate-odds\"\n                            onChange={onSelectOdds}\n                            value={odds}>\n                            <option value={Odds.Impossible}>Impossible</option>\n                            <option value={Odds.NoWay}>No way</option>\n                            <option value={Odds.VeryUnlikely}>Very unlikely</option>\n                            <option value={Odds.Unlikely}>Unlikely</option>\n                            <option value={Odds.FiftyFifty}>50/50</option>\n                            <option value={Odds.SomewhatLikely}>Somewhat likely</option>\n                            <option value={Odds.Likely}>Likely</option>\n                            <option value={Odds.VeryLikely}>Very likely</option>\n                            <option value={Odds.NearSureThing}>Near sure thing</option>\n                            <option value={Odds.ASureThing}>A sure thing</option>\n                            <option value={Odds.HasToBe}>Has to be</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group mb-0\">\n                        <label className=\"mb-0\">Probability</label>\n                        {ranges && (\n                            <React.Fragment>\n                                <small className=\"d-block\">\n                                    Success chance: {getFateSuccessChance(ranges.Prob)}\n                                </small>\n                                <small className=\"d-block\">\n                                    Ranges: <span className=\"text-success\">{ranges.UpProb}</span> –\n                                    <span className=\"text-muted\"> {ranges.Prob}</span> –{\" \"}\n                                    <span className=\"text-danger\">{ranges.LoProb}</span>\n                                </small>\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <Formik onSubmit={onSubmitFateQuestion} initialValues={initialQuestionValues}>\n                        <Form>\n                            <div className=\"form-group mb-2\">\n                                <label>Fate Question</label>\n                                <div className=\"input-group\">\n                                    <Field\n                                        name=\"question\"\n                                        type=\"text\"\n                                        className=\"form-control form-control-sm font-italic\"\n                                        placeholder=\"Ask a question…\"\n                                    />\n                                    <div className=\"input-group-append\">\n                                        <button className=\"btn btn-sm btn-primary\">Ask</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </Form>\n                    </Formik>\n                    <Formik onSubmit={onSubmitDiceRoll} initialValues={initialDiceValues}>\n                        <Form>\n                            <div className=\"form-group mb-0\">\n                                <label>Dice Roll</label>\n                                <div className=\"input-group\">\n                                    <Field\n                                        name=\"roll\"\n                                        type=\"text\"\n                                        className=\"form-control form-control-sm text-monospace\"\n                                        placeholder=\"Enter a dice string…\"\n                                    />\n                                    <div className=\"input-group-append\">\n                                        <button className=\"btn btn-sm btn-primary\">Roll</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </Form>\n                    </Formik>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport const ToolbarFateC = connect(\n    mapStateToProps,\n    dispatchProps,\n)(ToolbarFate);\n","import React from \"react\";\n\nexport const ToolbarHeader: React.FC = () => {\n    return (\n        <header\n            className=\"d-flex h-100 flex-column justify-content-center align-items-center\n    w-25 border-right p-4\">\n            <h1 className=\"h2 text-muted\">Prophet</h1>\n            <h2 className=\"h6 text-muted\">\n                Made by{\" \"}\n                <a href=\"https://github.com/Fraedon\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    @Fraedon\n                </a>\n            </h2>\n        </header>\n    );\n};\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { ProphetState } from \"../store\";\n\nconst mapStateToProps = (state: ProphetState) => {\n    return { state };\n};\n\nexport type ToolbarSaveLoadProps = ReturnType<typeof mapStateToProps>;\n\nconst ToolbarSaveLoad: React.FC<ToolbarSaveLoadProps> = (props) => {\n    const [saveName, setSaveName] = useState(\"My adventure\");\n    const [saves, setSaves] = useState<string[]>([]);\n\n    const onSaveNameChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setSaveName(e.target.value);\n    };\n\n    useEffect(() => {\n        const saveList = Object.entries(localStorage).map((e) => {\n            return e[0];\n        });\n        setSaves(saveList);\n    });\n\n    const saveEntries = saves.map((s) => {\n        return (\n            <Dropdown.Item className=\"d-flex align-items-center\" key={s} eventKey={s}>\n                <i className=\"fas fa-save mr-2\" />\n                {s}\n            </Dropdown.Item>\n        );\n    });\n\n    const onSave = () => {\n        if (saveName.trim()) {\n            const saveData = props.state;\n            localStorage.setItem(saveName, JSON.stringify(saveData));\n        }\n    };\n\n    const onLoad = (data: string) => {\n        sessionStorage.setItem(\"load\", data);\n        window.location.reload();\n    };\n\n    const onDelete = () => {\n        localStorage.removeItem(saveName);\n    };\n\n    return (\n        <section\n            className=\"h-100 w-25 text-center d-flex flex-column justify-content-center\n        align-items-center overflow-auto\">\n            <div className=\"form-group\">\n                <label>Save and Load</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control form-control-sm\"\n                    placeholder=\"Enter save name…\"\n                    value={saveName}\n                    onChange={onSaveNameChange}\n                />\n            </div>\n            <div className=\"btn-toolbar\">\n                <button className=\"btn btn-primary btn-sm mr-2 h-100\" onClick={() => onSave()}>\n                    Save\n                </button>\n                <Dropdown onSelect={onLoad}>\n                    <Dropdown.Toggle id=\"load-name\" size=\"sm\" variant=\"secondary\" className=\"mr-2\">\n                        Load\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>{saveEntries}</Dropdown.Menu>\n                </Dropdown>\n                <button className=\"btn btn-danger btn-sm h-100\" onClick={() => onDelete()}>\n                    Delete\n                </button>\n            </div>\n        </section>\n    );\n};\n\nexport const ToolbarSaveLoadC = connect(mapStateToProps)(ToolbarSaveLoad);\n","import React from \"react\";\nimport { ToolbarFateC as ToolbarFate } from \"./ToolbarFate\";\nimport { ToolbarHeader } from \"./ToolbarHeader\";\nimport { ToolbarSaveLoadC as ToolbarSaveLoad } from \"./ToolbarSaveLoad\";\n\nexport const Toolbar: React.FC = () => {\n    return (\n        <div className=\"card card-body h-100 p-0 flex-row\">\n            <ToolbarHeader />\n            <ToolbarFate />\n            <ToolbarSaveLoad />\n        </div>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createReducer } from \"typesafe-actions\";\nimport { ChaosActions } from \"./ChaosActions\";\nimport { ChaosState, SET_CHAOS } from \"./ChaosTypes\";\n\nconst initialState: ChaosState = 5;\n\nexport const chaosReducer = createReducer<ChaosState, ChaosActions>(initialState).handleAction(\n    SET_CHAOS,\n    (state, action) => {\n        return action.payload;\n    },\n);\n","import { createReducer } from \"typesafe-actions\";\nimport { CharactersActions } from \"./CharactersActions\";\nimport {\n    ADD_CHARACTER,\n    CharactersState,\n    CLEAR_CHARACTERS,\n    EDIT_CHARACTER,\n    REMOVE_CHARACTER,\n    SELECT_CHARACTER,\n} from \"./CharactersTypes\";\n\nconst initialState: CharactersState = {\n    characters: [],\n    selectedCharacter: undefined,\n};\n\nexport const charactersReducer = createReducer<CharactersState, CharactersActions>(initialState)\n    .handleAction(ADD_CHARACTER, (state, action) => {\n        return { ...state, characters: [...state.characters, action.payload] };\n    })\n    .handleAction(REMOVE_CHARACTER, (state, action) => {\n        return {\n            ...state,\n            characters: state.characters.filter((c) => c.id !== action.payload),\n        };\n    })\n    .handleAction(EDIT_CHARACTER, (state, action) => {\n        return {\n            ...state,\n            characters: state.characters.map((c) =>\n                c.id === action.payload.id ? Object.assign({}, c, action.payload.data) : c,\n            ),\n        };\n    })\n    .handleAction(CLEAR_CHARACTERS, (state) => {\n        return { ...state, characters: [] };\n    })\n    .handleAction(SELECT_CHARACTER, (state, action) => {\n        const character = state.characters.find((c) => c.id === action.payload);\n        return { ...state, selectedCharacter: character };\n    });\n","import { createReducer } from \"typesafe-actions\";\nimport { clearLog, deleteLog, editLog, LogActions, postLog, setInputMode } from \"./LogActions\";\nimport { LogState } from \"./LogTypes\";\n\nconst initialState: LogState = {\n    inputMode: {\n        characterId: \"\",\n        type: \"narration\",\n    },\n    items: [],\n};\n\nexport const logReducer = createReducer<LogState, LogActions>(initialState)\n    .handleAction(postLog, (state, action) => {\n        return { ...state, items: [...state.items, action.payload] };\n    })\n    .handleAction(deleteLog, (state, action) => {\n        return {\n            ...state,\n            items: state.items.filter((i) => i.id !== action.payload),\n        };\n    })\n    .handleAction(clearLog, (state) => {\n        return { ...state, items: [] };\n    })\n    .handleAction(setInputMode, (state, action) => {\n        return { ...state, inputMode: action.payload };\n    })\n    .handleAction(editLog, (state, action) => {\n        return {\n            ...state,\n            items: state.items.map((i) => {\n                if (i.id === action.payload.id) {\n                    return action.payload.item;\n                }\n                return i;\n            }),\n        };\n    });\n","import { createReducer } from \"typesafe-actions\";\nimport { ThreadsActions } from \"./ThreadsActions\";\nimport {\n    ADD_THREAD,\n    CLEAR_THREADS,\n    EDIT_THREAD,\n    REMOVE_THREAD,\n    SELECT_THREAD,\n    ThreadsState,\n} from \"./ThreadsTypes\";\n\nconst initialState: ThreadsState = {\n    selectedThread: undefined,\n    threads: [],\n};\n\nexport const threadsReducer = createReducer<ThreadsState, ThreadsActions>(initialState)\n    .handleAction(ADD_THREAD, (state, action) => {\n        return { ...state, threads: [...state.threads, action.payload] };\n    })\n    .handleAction(REMOVE_THREAD, (state, action) => {\n        return {\n            ...state,\n            threads: state.threads.filter((t) => t.id !== action.payload),\n        };\n    })\n    .handleAction(EDIT_THREAD, (state, action) => {\n        return {\n            ...state,\n            threads: state.threads.map((t) =>\n                t.id === action.payload.id ? Object.assign({}, t, action.payload.data) : t,\n            ),\n        };\n    })\n    .handleAction(CLEAR_THREADS, (state) => {\n        return { ...state, threads: [] };\n    })\n    .handleAction(SELECT_THREAD, (state, action) => {\n        const thread = state.threads.find((t) => t.id === action.payload);\n        return { ...state, selectedThread: thread };\n    });\n","import { combineReducers, createStore, Store } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { chaosReducer } from \"./chaos-factor/chaosReducer\";\nimport { charactersReducer } from \"./characters/charactersReducer\";\nimport { logReducer } from \"./log/logReducer\";\nimport { threadsReducer } from \"./threads/threadsReducer\";\n\nconst rootReducer = combineReducers({\n    chaos: chaosReducer,\n    characters: charactersReducer,\n    log: logReducer,\n    threads: threadsReducer,\n});\n\nlet initialState = {};\nif (sessionStorage.getItem(\"load\")) {\n    const saveData = localStorage.getItem(sessionStorage.getItem(\"load\")!);\n    if (saveData) {\n        initialState = JSON.parse(saveData);\n    }\n}\n\nexport const store: Store = createStore(rootReducer, initialState, devToolsEnhancer({}));\n\nexport type ProphetState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Prophet } from \"./Prophet\";\nimport \"./prophet.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Prophet />\n    </Provider>,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { ChaosFactorC as ChaosFactor } from \"./chaos-factor/ChaosFactor\";\nimport { Characters } from \"./characters/Characters\";\nimport { Log } from \"./log/Log\";\nimport { Threads } from \"./threads/Threads\";\nimport { Toolbar } from \"./toolbar/Toolbar\";\n\nexport const Prophet: React.FC = () => {\n    return (\n        <main className=\"container py-3\">\n            <div className=\"row h-75\">\n                <div className=\"col-md-6\">\n                    <Log />\n                </div>\n                <div className=\"col-md-6 d-flex flex-column\">\n                    <div className=\"row\">\n                        <div className=\"col w-100\">\n                            <ChaosFactor />\n                        </div>\n                    </div>\n                    <div className=\"row mt-3 flex-grow-1\">\n                        <div className=\"col-md-6\">\n                            <Characters />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Threads />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row h-25 py-3\">\n                <div className=\"col-md-12 h-100\">\n                    <Toolbar />\n                </div>\n            </div>\n        </main>\n    );\n};\n"],"sourceRoot":""}